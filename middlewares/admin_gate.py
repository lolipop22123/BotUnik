# middlewares/admin_gate.py
from typing import Any, Awaitable, Callable, Dict
from aiogram.types import TelegramObject, Message

class AdminGateMiddleware:
    """–ü—É—Å–∫–∞–µ—Ç –¥–∞–ª—å—à–µ —Ç–æ–ª—å–∫–æ ADMIN_ID. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ message-—Ä–æ—É—Ç–µ—Ä–µ."""
    def __init__(self, admin_id: int | None) -> None:
        self.admin_id = admin_id

    async def __call__(
        self,
        handler: Callable[[TelegramObject, Dict[str, Any]], Awaitable[Any]],
        event: TelegramObject,
        data: Dict[str, Any],
    ) -> Any:
        # –î–ª—è message-—Ä–æ—É—Ç–µ—Ä–∞ event –±—É–¥–µ—Ç Message
        msg = event if isinstance(event, Message) else data.get("event_message")

        user_id = None
        if isinstance(msg, Message) and msg.from_user:
            user_id = msg.from_user.id

        # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –Ω–∏–∫–æ–≥–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º
        if not self.admin_id:
            return await handler(event, data)

        if user_id == self.admin_id:
            return await handler(event, data)

        if isinstance(msg, Message):
            await msg.answer("üö´ –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞.")
        return
