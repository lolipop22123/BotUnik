from aiogram import BaseMiddleware
from aiogram.types import Message

from typing import Any, Callable, Dict, Awaitable


class AdminGateMiddleware(BaseMiddleware):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –æ—Ç ADMIN_ID. –ò–Ω–∞—á–µ ‚Äî –æ—Ç–∫–ª–æ–Ω—è–µ–º.
    –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–æ—É—Ç–µ—Ä–∞—Ö (admin_router) –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–∞—Ö.
    """


    def __init__(self, admin_id: int | None) -> None:
        self.admin_id = admin_id

        async def __call__(
            self,
            handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
            event: Message,
            data: Dict[str, Any],
        ) -> Any:
            if self.admin_id and event.from_user and event.from_user.id == self.admin_id:
                return await handler(event, data)
            
            # –ú—è–≥–∫–æ –æ—Ç–∫–∞–∂–µ–º, –Ω–æ –Ω–µ –ø–æ–¥–Ω–∏–º–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
            await event.answer("üö´ –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞.")
            return