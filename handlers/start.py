import asyncio
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode


from config import BOT_TOKEN, RATE_LIMIT_PER_MIN, ADMIN_ID
from handlers import start, help, echo
from services.commands import setup_bot_commands
from middlewares.logging import LoggingMiddleware
from middlewares.throttling import ThrottlingMiddleware


# –û—Ç–¥–µ–ª—å–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ (–ø—Ä–∏–º–µ—Ä)
from aiogram import Router
from middlewares.admin_gate import AdminGateMiddleware


admin_router = Router(name="admin")
# –ü—Ä–∏–º–µ—Ä –∞–¥–º–∏–Ω-—Ö–µ–Ω–¥–ª–µ—Ä–∞ (—Å–∫—Ä—ã—Ç—ã–π): /admin_ping
from aiogram.filters import Command
from aiogram import types


@admin_router.message(Command("admin_ping"))
async def admin_ping(message: types.Message):
await message.answer("‚úÖ Admin OK")


async def main():
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()


# –ü–æ–¥–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ middleware
dp.message.middleware(LoggingMiddleware())
dp.message.middleware(ThrottlingMiddleware(rate_per_min=RATE_LIMIT_PER_MIN))


# –†–æ—É—Ç–µ—Ä –∞–¥–º–∏–Ω–∞ ‚Äî –∑–∞—â–∏—â–∞–µ–º –º–∏–¥–¥–ª–≤–∞—Ä—å—é
admin_router.message.middleware(AdminGateMiddleware(admin_id=ADMIN_ID))


# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(start.router)
dp.include_router(help.router)
dp.include_router(admin_router)
dp.include_router(echo.router)


# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é-–∫–æ–º–∞–Ω–¥—ã –≤ Telegram (–≤–∏–¥–Ω—ã –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é)
await setup_bot_commands(bot)


print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω‚Ä¶")
await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())


if __name__ == "__main__":
asyncio.run(main())